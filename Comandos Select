Drop table empregados07 cascade constraints;

CREATE TABLE EMPREGADO07 
  ( CODEMP NUMBER(05),
    NOME  VARCHAR2(50),
    DATA_ADM  DATE,
    SALARIO   NUMBER(7,2),
    COMISSAO  CHAR(01),
        CONSTRAINT EMP_CODEMP_PK
        PRIMARY KEY(CODEMP));
    
DESC EMPREGADO07;

INSERT INTO EMPREGADO07 VALUES (1111, 'GRACIELE MONTEIRO', '18/07/2018', 7500.71, 'S');

COMMIT;

SELECT * FROM EMPREGADO07;

COMMENT ON TABLE EMPREGADO07 IS 'Esta tabela serve para armazenar dados do emprego';

// REALIZA UM SELECT CONTANDO TODOS OS REGISTROS DA TABELA. 

SELECT COUNT(*) FROM EMPREGADO07;

// REALIZA UM SELECT NA TABLE ALL_TAB_COMMENTS ONDE O NOME DA TABLELA 'EMPREGADO07'

SELECT COMMENTS FROM ALL_TAB_COMMENTS WHERE TABLE_NAME = 'EMPREGADO07';

// RETORNA NOME E SALARIO ORGANIZADO POR NOME
SELECT NOME, SALARIO FROM  EMPREGADO07 ORDER BY NOME ASC;

// RETORNA NOME E SALARIO ORGANIZADO POR VALOR DO SALARIO
SELECT NOME, SALARIO FROM EMPREGADO07 ORDER BY SALARIO DESC;

// RETORNA NOME E SALARIO ORGANIZADO POR DATA.
SELECT NOME, SALARIO FROM EMPREGADO07 ORDER BY DATA_ADM ASC;

// RETORNA NOME E SALARIO  MAS SALARIO MAIS 10% ONDE SALARIO É MAIOR QUE 0 EM EMPREGADOS07
SELECT NOME, SALARIO, SALARIO * 1.10 FROM EMPREGADO07 WHERE SALARIO > 0

// RETORNA NOME, DATA_ADM E DATA_ADM + 360 .
SELECT NOME, DATA_ADM, DATA_ADM + 360 FROM EMPREGADO07 WHERE SALARIO > 0;

//  PRECEDÊNDIA DE OPERADORES
SELECT NOME, SALARIO, 12 * SALARIO + 100 FROM EMPREGADO07;

SELECT NOME, SALARIO, 12 * (SALARIO + 100) FROM EMPREGADO07;

//SELECIONA REGISTROS COM CAMPO NULL
SELECT * FROM EMPREGADO07 WHERE COMISSAO IS NULL

//SELECIONA REGISTROS QUE NÃO TENHA CAMPO NULL
SELECT * FROM EMPREGADO07 WHERE COMISSAO IS  NOT NULL

// RECURSOS DE PESQUISA, 
// SELECIONA EM DE NOME, SALARIOM DATA_ADM TODOS ONDE NOME COMEÇA COM 'G'
SELECT NOME, SALARIO, DATA_ADM FROM EMPREGADO07 WHERE NOME LIKE 'G%'

// SELECIONA EM DE NOME, SALARIOM DATA_ADM TODOS ONDE NOME TERMINA COM 'O'
SELECT NOME, SALARIO, DATA_ADM FROM EMPREGADO07 WHERE NOME LIKE '%O'

// SELECIONA EM DE NOME, SALARIOM DATA_ADM TODOS ONDE NOME CONTEM COM 'Z'
SELECT NOME, SALARIO, DATA_ADM FROM EMPREGADO07 WHERE NOME LIKE'%Z%'

// ALTERA COMISSAO  PARA CHAR(03)
ALTER TABLE EMPREGADO07 MODIFY COMISSAO CHAR(03)

// ALTERA 
UPDATE EMPREGADO07 SET COMISSAO = 'SIM' WHERE CODEMP='1111'

UPDATE EMPREGADO07 SET COMISSAO = 'NÃO' WHERE CODEMP='3333'

SELECT * FROM EMPREGADO07 WHERE COMISSAO LIKE '_I_'

SELECT NOME, SALARIO FROM EMPREGADO07 WHERE SALARIO < 3000;

SELECT NOME, SALARIO, DATA_ADM FROM EMPREGADO07 WHERE DATA_ADM >= '01/01/2000' AND
	DATA_ADM <= '31/12/2016'
  
SELECT NOME, SALARIO, DATA_ADM FROM EMPREGADO07 WHERE DATA_ADM BETWEEN
'01/01/2000' AND '31/12/2016'


SELECT * FROM EMPREGADO07 WHERE COMISSAO IN ('SIM', 'NAO')

SELECT * FROM EMPREGADO07 WHERE COMISSAO NOT IN ('SIM', 'NAO')

//FUNÇÃO NUMERICA

// SELECIONA DA TABELA EMPREGADO O MAIOR VALOR VALOR DO CAMPO SALARIO
SELECT MAX(SALARIO) FROM EMPREGADO07

// SELECIONA DA TABELA EMPREGADO O MENOR VALOR VALOR DO CAMPO SALARIO
SELECT MIN(SALARIO) FROM EMPREGADO07

// SOMA TODOS OS VALOR DA CALUNA SALARIO 
SELECT SUM(SALARIO) FROM EMPREGADO07

//CALCULA A MEDIA SOMA SALARIO E DIVIDE POR SALARIO
SELECT AVG(SALARIO) FROM EMPREGADO07

SELECT MAX(SALARIO),
	MIN(SALARIO),
	SUM(SALARIO),
	AVG(SALARIO) FROM EMPREGADO07;

// TEORIA  DE CONJUNTOS

//TRAS TODOS OS REGISTROS DE AMBAS TABELAS E OS REPETIDOS SOMENTE UMA VEZ
SELECT * FROM CLIENTE_A UNION SELECT * FROM CLIENTE_B

// FORMATAR COLUNA 
COLUMN CPF FORMAT 99999999999;

// SELECIONA TODOS OS VALORES DE TODAS AS COLUNAS
SELECT * FROM CLIENTE_A UNION ALL SELECT * FROM CLIENTE_B

// AJUSTA A QUANTIDADE DE CARACTER POR LINHAS
SET LINESIZE 100;

// SELECIONA OS REGISTROS QUE ESTÃO PRESENTES AO MESMO TEMPO NAS DUAS TABLEAS
SELECT * FROM CLIENTE_A INTERSECT SELECT * FROM CLIENTE_B

// SELECIONA OS REGISTRO QUE ESTÃO  PRESENTE SOMENTE EM CLIETE_A
SELECT * FROM CLIENTE_A MINUS SELECT * FROM CLIENTE_B


// FUNÇÕES DE CONVERSÃO

// FORMA CRUA DA CULUNA SISDATE
SELECT SYSDATE FROM DUAL

///////////////////////////////////////////////////FORMATA FORMADOS DOS CAMPOS: 
COLUMN DIA FORMAT A3;

// FORMATA O SYSDATE DO SISTEMA
SELECT TO_CHAR(SYSDATE, 'DD') DIA,
	TO_CHAR(SYSDATE, 'MM') MES,
	TO_CHAR(SYSDATE, 'YYYY') ANO
FROM DUAL

//FORMATA O CAMPO PARA QUE DIGA A DATA POR EXTESSO.
SELECT TO_CHAR(SYSDATE, 'DD " de " MONTH " de " YYYY') "DATA ATUAL" FROM DUAL



//////////////////////////////////////////////////// ESTUDAR SOBRE NORMALIZAÇÃO/////////////////////////////////////////////////////////
				// ANOMALIAS DA: INCLUSÃO, ALTERAÇÃO, EXCLUSÃO E MODELAGEM DE DADOS.//
CREATE TABLE CARGO (
	CODCARGO	CHAR(02),
	NOMECARGO	VARCHAR2(10) NOT NULL,
	VALORCARGO	NUMBER(7,2) NOT NULL,
CONSTRAINT CARGO_CODCARGO_PK PRIMARY KEY(CODCARGO))

CREATE TABLE FUNCIONARIO(
	MATRICULA NUMBER(03),
	NOMEFUNCIONARIO	VARCHAR(15),
	CODCARGO	CHAR(02),
CONSTRAINT FUNC_MAT_PK PRIMARY KEY(MATRICULA),
CONSTRAINT FUNC_CODC_FK FOREIGN KEY (CODCARGO) REFERENCES CARGO (CODCARGO))

INSERT INTO FUNCIONARIO VALUES( 100, 'JOAO', 'C1');

SELECT A.MATRICULA, A.NOMEFUNCIONARIO, B.VALORCARGO
FROM FUNCIONARIO A, NOMECARGO B
WHERE A.CODCARGO = B.CODCARGO


